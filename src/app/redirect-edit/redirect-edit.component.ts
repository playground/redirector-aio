import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';

import { ToastService } from "../toast/toast.service";

@Component({
  selector: 'app-redirect-edit',
  templateUrl: './redirect-edit.component.html',
  styleUrls: ['./redirect-edit.component.css']
})
export class RedirectEditComponent implements OnInit {
  private codes = [301, 302, 303, 304, 305];
  private tooltips = {
    '301':'Moved Permanently The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.',
    '302': 'Found The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.',
    '303': 'Use GET Method The response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. The 303 response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.',
    '304': 'Not Modified If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.',
    '305': 'Use Proxy to Fetch The requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. 305 responses MUST only be generated by origin servers.'
  };
  @Input() showModal: boolean;
  @Input() title: string;
  @Input() redirect: any;
  @Input() message: string;
  @Input() okText: string;
  @Input() cancelText: string;
  @Output() valueEmitted = new EventEmitter<string>();

  constructor(private toastService: ToastService) {
    this.okText = 'OK';
    this.cancelText = 'Cancel';
  }

  ngOnInit() {
    console.log("init");
    //this.selectedCode = this.redirect.redirectCode;
  }

  showToast(code) {
    console.log('toast', code);
    let options = {
      title: code,
      theme: 'bootstrap',
      type: 'default',
      position: 'top-right',
      msg: this.tooltips[code] ? this.tooltips[code] : ''
    };
    this.toastService.showNewToast(options);
  }

  emitValue(value) {
    console.log('emit', value)
    this.valueEmitted.emit(value);
  }
}
